#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
export DH_VERBOSE=1

# chop out the source version from Changelog (ie 3.14.10)
# Taken from CDBS
DEB_VERSION = $(shell dpkg-parsechangelog | egrep '^Version:' | cut -f 2 -d ' ')
DEB_NOEPOCH_VERSION = $(shell echo $(DEB_VERSION) | cut -d: -f2-)
SOV=$(shell echo "$(DEB_NOEPOCH_VERSION)"| cut -f 1 -d '-')

EPICS_HOST_ARCH:=$(shell /usr/lib/epics/startup/EpicsHostArch)

DEBUG_TARGETS=$(EPICS_HOST_ARCH)-debug
TARGETS+=$(DEBUG_TARGETS) $(RTEMS_TARGETS)

DEB_MAKE_MAKEVARS += EPICS_HOST_ARCH=$(EPICS_HOST_ARCH)
DEB_MAKE_MAKEVARS += USE_RPATH=NO
DEB_MAKE_MAKEVARS += SHRLIB_VERSION=$(SOV)
DEB_MAKE_MAKEVARS += CROSS_COMPILER_TARGET_ARCHS="$(TARGETS)"

#DEB_MAKE_ENVVARS += PATH=\``$$PWD/bin/$(EPICS_HOST_ARCH):$$PATH"\"
#DEB_MAKE_ENVVARS += LD_LIBRARY_PATH=\``$$PWD/lib/$(EPICS_HOST_ARCH):               $$LD_LIBRARY_PATH"\"

DEB_MAKE_INVOKE  = $(DEB_MAKE_ENVVARS) $(MAKE) $(DEB_MAKE_MAKEVARS)

EPICS_ARCHS = $(EPICS_HOST_ARCH) $(DEBUG_TARGETS)
EPICS_LIBS = pmacAsynIPPort pmacAsynMotor pmacAsynCoord
LIB_ROOT=debian/tmp/usr/lib

%:
	dh  $@

# no Automagic tools here...
override_dh_auto_configure:

# override and insert DEBUG_TARGETS in make command
override_dh_auto_build:
	$(DEB_MAKE_INVOKE)

override_dh_install:
	set -ex; \
	install -d $(LIB_ROOT); \
	\
	for ll in $(EPICS_LIBS); do \
	    echo "$${ll}"; \
	    for aa in $(EPICS_ARCHS); do \
		echo "$${aa}"; \
		install -d $(LIB_ROOT)/epics/lib/$${aa}; \
		if [ "$$(echo "$${aa}" | grep -c debug)" = "1" ]; then \
		    install -t $(LIB_ROOT)/epics/lib/$${aa} lib/$${aa}/lib$${ll}.a; \
		    install -t $(LIB_ROOT)/epics/lib/$${aa} lib/$${aa}/lib$${ll}.so.$(SOV); \
                    ln -s lib$${ll}.so.$(SOV) $(LIB_ROOT)/epics/lib/$${aa}/lib$${ll}.so; \
		else \
		    install -m 644 -t $(LIB_ROOT) lib/$${aa}/lib$${ll}.so.$(SOV); \
                    install -m 644 -t $(LIB_ROOT)/epics/lib/$${aa}/ lib/$${aa}/lib$${ll}.a; \
                    ln -s ../../../lib$${ll}.so.$(SOV) $(LIB_ROOT)/epics/lib/$${aa}/lib$${ll}.so; \
		fi; \
	    done; \
	done

	dh_install
